syntax = "proto3";

package realworld.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "kratos-realworld/api/realworld/v1;v1";

service RealWorld {
  rpc Login(LoginRequest) returns (UserReplay) {
    option (google.api.http) = {
      post: "/api/users/login",
      body: "*",

    };
  }

  rpc Register(RegisterRequest) returns (UserReplay) {
    option (google.api.http) = {
      post: "/api/users",
      body: "*",

    };
  }

  rpc GetCurrentUser(GetCurrentUserRequest) returns (UserReplay) {
    option (google.api.http) = {
      get: "/api/user",

    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UserReplay) {
    option (google.api.http) = {
      put: "/api/user",
      body: "*",

    };
  }

  rpc GetProfile(GetProfileRequest) returns (ProfileReplay) {
    option (google.api.http) = {
      get: "/api/profiles/{username}",

    };
  }

  rpc FollowUser(FollowUserRequest) returns (ProfileReplay) {
    option (google.api.http) = {
      post: "/api/profiles/{username}/follow",
      body: "*",

    };
  }

 rpc UnfollowUser(UnFollowUserRequest) returns (ProfileReplay) {
    option (google.api.http) = {
      delete: "/api/profiles/{username}/unfollow",

    };
  }

  rpc ListArticles(ListArticlesRequest) returns (MultipleArticlesReplay) {
    option (google.api.http) = {
      get: "/api/articles",

    };
  }

  rpc FeedArticles(FeedArticlesRequest) returns (MultipleArticlesReplay) {
    option (google.api.http) = {
      get: "/api/articles/feed",

    };
  }

  rpc GetArticles(GetArticleRequest) returns (MultipleArticlesReplay) {
    option (google.api.http) = {
      get: "/api/articles/{slug}",

    };
  }

  rpc CreateArticles(CreateArticleRequest) returns (SingleArticleReplay) {
    option (google.api.http) = {
      post: "/api/articles",
      body: "*"

    };
  }

  rpc UpdateArticles(UpdateArticleRequest) returns (SingleArticleReplay) {
    option (google.api.http) = {
      put: "/api/articles/{slug}",
      body: "*"

    };
  }

  rpc DeleteArticles(DeleteArticleRequest) returns (SingleArticleReplay) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}",

    };
  }

  rpc AddComment(AddCommentRequest) returns (SingleCommentReplay) {
    option (google.api.http) = {
      post: "/api/articles/{slug}/comments",
      body: "*"

    };
  }

  rpc GetComment(GetCommentRequest) returns (MultipleCommentsReplay) {
    option (google.api.http) = {
      get: "/api/articles/{slug}/comments",

    };
  }

  rpc DeleteComment(DeleteCommentRequest) returns (SingleCommentReplay) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/comments/{id}",

    };
  }

  rpc FavoriteArticle(FavoriteArticleRequest) returns (SingleArticleReplay) {
    option (google.api.http) = {
      post: "/api/articles/{slug}/favorite",
      body: "*"

    };
  }

  rpc UnFavoriteArticle(UnFavoriteArticleRequest) returns (SingleArticleReplay) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/favorite",

    };
  }

  rpc GetTags(GetTagsRequest) returns (ListTagsReplay) {
    option (google.api.http) = {
      delete: "/api/tags",

    };
  }

}

// All Request
message GetTagsRequest {}

message FavoriteArticleRequest {
  string slug = 1;
}

message UnFavoriteArticleRequest {
  string slug = 1;
}

message DeleteCommentRequest {
  string slug  = 1;
  int32 id = 2;
}

message GetCommentRequest {
  string slug = 1;
}

message AddCommentRequest {
  message Comment {
    string body = 1;
  }
  Comment comment = 1;
  string slug = 2;

}

message GetArticleRequest {
  string slug = 1;
}

message DeleteArticleRequest {
  string slug = 1;
}

message UpdateArticleRequest {

  message Article {
      string title = 1;
  }

  Article article = 1;
  string slug = 2;
}

message CreateArticleRequest {

  message Article {
      string title = 1;
      string description = 2;
      string body = 3;
      repeated string tagList = 4;
  }

  Article article = 1;
}

message FeedArticlesRequest {
  int64 limit = 4;
  int32 offset = 5;
}

message ListArticlesRequest {
  string tag = 1;
  string author = 2;
  string facorited = 3;
  int64 limit = 4;
  int32 offset = 5;
}

message UnFollowUserRequest {
  string username = 1;
}

message FollowUserRequest {
  string username = 1;
}

message GetProfileRequest {
  string username = 1;
}

message GetCurrentUserRequest {}

message UpdateUserRequest {

    message User {
      string email = 1;
      string token = 2;
      string username = 3;
      string bio = 4;
      string image = 5;
    }

    User user = 1;
}

// All Replay
message UserReplay {
  message User {
    string email = 1;
    string token = 2;
    string username = 3;
    string bio = 4;
    string image = 5;
  }
  User user = 1;
}

message ProfileReplay {
  string username = 1;
  string bio = 2;
  string image = 3;
  bool following = 4;
}

message SingleArticleReplay {

    message Author {
        string username = 1;
        string bio = 2;
        string image = 3;
        bool following = 4;
    }

    message Article {
        string slug = 1;
        string title = 2;
        string description = 3;
        string body = 4;
        repeated string tagList = 5;
        google.protobuf.Timestamp createdAt = 6;
        google.protobuf.Timestamp updatedAt = 7;
        bool favorited = 8;
        uint32 favoritesCount = 9;
        Author author = 10;
    }

    Article article = 1;
}

message MultipleArticlesReplay {

    message Author {
        string username = 1;
        string bio = 2;
        string image = 3;
        bool following = 4;
    }

    message Articles {
        string slug = 1;
        string title = 2;
        string description = 3;
        string body = 4;
        repeated string tagList = 5;
        google.protobuf.Timestamp createdAt = 6;
        google.protobuf.Timestamp updatedAt = 7;
        bool favorited = 8;
        uint32 favoritesCount = 9;
        Author author = 10;
    }

    repeated Articles articles = 1;
    uint32 articlesCount = 2;
}

message SingleCommentReplay {

    message Author {
        string username = 1;
        string bio = 2;
        string image = 3;
        bool following = 4;
    }

    message Comment {
        uint32 id = 1;
        google.protobuf.Timestamp createdAt = 2;
        google.protobuf.Timestamp updatedAt = 3;
        string body = 4;
        Author author = 5;
    }

    Comment comment = 1;
}

message MultipleCommentsReplay {

    message Author {
        string username = 1;
        string bio = 2;
        string image = 3;
        bool following = 4;
    }

    message Comments {
        uint32 id = 1;
        google.protobuf.Timestamp createdAt = 2;
        google.protobuf.Timestamp updatedAt = 3;
        string body = 4;
        Author author = 5;
    }

    repeated Comments comments = 1;
}

message ListTagsReplay {
    repeated string tags = 1;
}

message LoginRequest {
  message User {
      string email = 1;
      string password = 2;
  }
  User user = 1;
}

message RegisterRequest {
  message User {
      string username = 1;
      string email = 2;
      string password = 3;
  }
  User user = 1;
}
